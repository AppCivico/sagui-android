apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'

// App version
ext.versionMajor = 0
ext.versionMinor = 1
ext.versionPatch = 6
ext.jenkinsBuildNumber = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.eokoe.sagui"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode computeVersionCode()
        versionName computeVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        def filesAuthorityValue = getFilesAuthority(applicationId, applicationIdSuffix)
        def apiBaseUrl = System.getenv("SAGUI_API_BASE_URL") ?: API_BASE_URL
        manifestPlaceholders = [
                fabricApiKey: System.getenv("FABRIC_API_KEY") ?: FABRIC_API_KEY,
                mapsApiKey: System.getenv("SAGUI_MAPS_API_KEY") ?: MAPS_API_KEY,
                filesAuthority: filesAuthorityValue,
        ]
        buildConfigField "String", "API_BASE_URL", "\"${apiBaseUrl}\""

        multiDexEnabled true
    }
    flavorDimensions 'default'
    productFlavors {
        dev {
            applicationIdSuffix = '.dev'
            versionNameSuffix "-DEV"
            manifestPlaceholders.filesAuthority = getFilesAuthority(applicationId, applicationIdSuffix)
        }
        staging {
            applicationIdSuffix = '.staging'
            versionNameSuffix "-STAGING"
            manifestPlaceholders.filesAuthority = getFilesAuthority(applicationId, applicationIdSuffix)
        }
        prod {}
    }
    buildTypes {
        debug {
            buildConfigField "String", "FILES_AUTHORITY", "\"${manifestPlaceholders.filesAuthority}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "FILES_AUTHORITY", "\"${manifestPlaceholders.filesAuthority}\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "com.android.support:multidex:$multidexVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:gridlayout-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.maps.android:android-maps-utils:$mapUtilsVersion"
//    compile "com.google.firebase:firebase-core:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"

    // Dependency injection
    implementation "org.koin:koin-android:$koinVersion"
    testImplementation "org.koin:koin-test:$koinVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"

    // Parcel
    implementation "nz.bradcampbell:paperparcel:$paperParcelVersion"
    implementation "nz.bradcampbell:paperparcel-kotlin:$paperParcelVersion"
    kapt "nz.bradcampbell:paperparcel-compiler:$paperParcelVersion"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.facebook.fresco:fresco:$frescoVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"

    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

apply plugin: 'com.google.gms.google-services'

@SuppressWarnings("GrMethodMayBeStatic")
def computeVersionName() {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

@SuppressWarnings("GrMethodMayBeStatic")
def computeVersionCode() {
    return (versionMajor * 100_000) + (versionMinor * 10_000) + (versionPatch * 1_000) + jenkinsBuildNumber
}

static def getFilesAuthority(applicationId, applicationIdSuffix) {
    return applicationId + applicationIdSuffix + ".files"
}
